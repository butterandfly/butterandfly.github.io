{"title":"使用httpie代替curl和wget","createDate":"2015-05-18","url":"data/2015-05-18-use-httpie.json","content":"## 什么是httpie\ngithub: https://github.com/jakubroztocil/httpie\nhttpie是一个命令行的http客户端。与经典的curl、wget一样，但提供更现代的特性。\n\n## 特性\n按照readme的说法，httpie吸引人的地方在于：\n\n* 简洁的语法（原文是Expressive and intuitive syntax，有表达力的、符合人类直觉的语法）\n* 输出内容经过格式化及上色（简单来说就是人类友好）\n* 内置的JSON支持\n* 支持HTTPS、代理和验证\n* 任意的请求数据（request data）\n* 可定制的头（headers）\n* 持续的session\n* Wget向的下载方式\n* 支持python2.6、2.7和3.x\n* 支持多平台（windows、mac、linux等）\n* 支持插件\n* 文档友好\n* 测试覆盖\n\n## 安装\n具体的安装我不再重复，可参考github上的readme。\n\n## 使用\nreadme里面有非常完整的文档，在此我不一一细述；下面我详细介绍一下其优越的地方。\n\n### 人类友好\nreadme的开头有一个对比图片，分别是使用curl和httpie的例子。从两个图片我们很容易地看出：\n\n* http需要的参数非常简洁\n* 输出结果不再是黑白电影\n\n单纯get一个地址的内容：\n\n```\n$ http httpie.org\n```\n\n如果你想用put的METHOD，同时定制头部和提交JSON数据，也不会复杂：\n\n```\n$ http PUT example.org X-API-Token:123 name=John\n```\n\n### 内置json\n如上一个例子，在没特殊说明的情况下，会提交json数据：\n\n```\n$ http PUT example.org name=John\n```\n\n如果你想提交form数据，则可以加上参数`-f`或’—form’；这样会使header中的Content-Type设置为application/x-www-form-urlencoded：\n\n```\n$ http -f POST example.org hello=World\n```\n\n### 使用验证（authentication）\n向github提交一个comment\n\n```\n$ http -a USERNAME POST https://api.github.com/repos/jakubroztocil/httpie/issues/83/comments body='HTTPie is awesome!'\n```\n\n### 使用代理\n\n```\n$ http --proxy=http:http://user:pass@10.10.1.10:3128 example.org\n```\n\n### HTTPS\n\n跳过验证：\n```\n$ http --verify=no https://example.org\n```\n\n### 定制输出内容\nhttpie可以指定输出内容：\n\n* `-h`或`--headers`，只输出response的headers\n* `-b`或`—body`，只输出response的body\n* `-v`或`—verbose`，同时输出request和response的全部内容\n* `-p`或`—print`，选择你想输出的特定内容\n\n## 后续\n以后使用的过程中我会继续完善这篇文章，有什么看法也希望大家积极提出，谢谢。"}